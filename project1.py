#! /usr/bin/python

import json
from timeit import default_timer as timer
import re
from mrjob.job import MRJob
from mrjob.step import MRStep
import os

class MyJob(MRJob):
    tokens = []
    logPath = os.path.abspath('log.txt').replace('\\', '/')
    stopWordsPath = os.path.abspath('stopwords.txt').replace('\\', '/')
    outputPath = os.path.abspath('output.txt').replace('\\', '/')
    categories_chi = {}
    stopWordsHash = {
        "a": 0,
        "b": 0,
        "c": 0,
        "d": 0,
        "e": 0,
        "f": 0,
        "g": 0,
        "h": 0,
        "i": 0,
        "j": 0,
        "k": 0,
        "l": 0,
        "m": 0,
        "n": 0,
        "o": 0,
        "p": 0,
        "q": 0,
        "r": 0,
        "s": 0,
        "t": 0,
        "u": 0,
        "v": 0,
        "x": 0,
        "y": 0,
        "z": 0,
        "aa": 0,
        "able": 0,
        "about": 0,
        "above": 0,
        "absorbs": 0,
        "accord": 0,
        "according": 0,
        "accordingly": 0,
        "across": 0,
        "actually": 0,
        "after": 0,
        "afterwards": 0,
        "again": 0,
        "against": 0,
        "ain": 0,
        "album": 0,
        "all": 0,
        "allow": 0,
        "allows": 0,
        "almost": 0,
        "alone": 0,
        "along": 0,
        "already": 0,
        "also": 0,
        "although": 0,
        "always": 0,
        "am": 0,
        "among": 0,
        "amongst": 0,
        "an": 0,
        "and": 0,
        "another": 0,
        "any": 0,
        "anybody": 0,
        "anyhow": 0,
        "anyone": 0,
        "anything": 0,
        "anyway": 0,
        "anyways": 0,
        "anywhere": 0,
        "apart": 0,
        "app": 0,
        "appear": 0,
        "appreciate": 0,
        "appropriate": 0,
        "are": 0,
        "aren": 0,
        "around": 0,
        "as": 0,
        "aside": 0,
        "ask": 0,
        "asking": 0,
        "associated": 0,
        "at": 0,
        "available": 0,
        "away": 0,
        "awfully": 0,
        "b": 0,
        "baby": 0,
        "bb": 0,
        "be": 0,
        "became": 0,
        "because": 0,
        "become": 0,
        "becomes": 0,
        "becoming": 0,
        "been": 0,
        "before": 0,
        "beforehand": 0,
        "behind": 0,
        "being": 0,
        "believe": 0,
        "below": 0,
        "beside": 0,
        "besides": 0,
        "best": 0,
        "better": 0,
        "between": 0,
        "beyond": 0,
        "bibs": 0,
        "bike": 0,
        "book": 0,
        "books": 0,
        "both": 0,
        "brief": 0,
        "bulbs": 0,
        "but": 0,
        "by": 0,
        "c": 0,
        "came": 0,
        "camera": 0,
        "can": 0,
        "cannot": 0,
        "cant": 0,
        "car": 0,
        "case": 0,
        "cause": 0,
        "causes": 0,
        "cd": 0,
        "certain": 0,
        "certainly": 0,
        "changes": 0,
        "clearly": 0,
        "co": 0,
        "coffee": 0,
        "com": 0,
        "come": 0,
        "comes": 0,
        "concerning": 0,
        "consequently": 0,
        "consider": 0,
        "considering": 0,
        "contain": 0,
        "containing": 0,
        "contains": 0,
        "corresponding": 0,
        "could": 0,
        "couldn": 0,
        "course": 0,
        "currently": 0,
        "d": 0,
        "definitely": 0,
        "described": 0,
        "despite": 0,
        "did": 0,
        "didn": 0,
        "different": 0,
        "do": 0,
        "does": 0,
        "doesn": 0,
        "dog": 0,
        "dogs": 0,
        "doing": 0,
        "doll": 0,
        "don": 0,
        "done": 0,
        "down": 0,
        "downwards": 0,
        "during": 0,
        "e": 0,
        "each": 0,
        "edu": 0,
        "eg": 0,
        "eight": 0,
        "either": 0,
        "else": 0,
        "elsewhere": 0,
        "enough": 0,
        "entirely": 0,
        "especially": 0,
        "et": 0,
        "etc": 0,
        "even": 0,
        "ever": 0,
        "every": 0,
        "everybody": 0,
        "everyone": 0,
        "everything": 0,
        "everywhere": 0,
        "ex": 0,
        "exactly": 0,
        "example": 0,
        "except": 0,
        "f": 0,
        "far": 0,
        "few": 0,
        "fifth": 0,
        "film": 0,
        "first": 0,
        "five": 0,
        "flavor": 0,
        "followed": 0,
        "following": 0,
        "follows": 0,
        "for": 0,
        "former": 0,
        "formerly": 0,
        "forth": 0,
        "four": 0,
        "from": 0,
        "fun": 0,
        "further": 0,
        "furthermore": 0,
        "g": 0,
        "game": 0,
        "get": 0,
        "gets": 0,
        "getting": 0,
        "given": 0,
        "gives": 0,
        "go": 0,
        "goes": 0,
        "going": 0,
        "gone": 0,
        "got": 0,
        "gotten": 0,
        "greetings": 0,
        "grill": 0,
        "guitar": 0,
        "h": 0,
        "had": 0,
        "hadn": 0,
        "hair": 0,
        "happens": 0,
        "hardly": 0,
        "has": 0,
        "hasn": 0,
        "have": 0,
        "haven": 0,
        "having": 0,
        "he": 0,
        "hello": 0,
        "help": 0,
        "hence": 0,
        "her": 0,
        "here": 0,
        "hereafter": 0,
        "hereby": 0,
        "herein": 0,
        "hereupon": 0,
        "hers": 0,
        "herself": 0,
        "hi": 0,
        "him": 0,
        "himself": 0,
        "his": 0,
        "hither": 0,
        "hopefully": 0,
        "how": 0,
        "howbeit": 0,
        "however": 0,
        "i": 0,
        "ie": 0,
        "if": 0,
        "ignored": 0,
        "immediate": 0,
        "in": 0,
        "inasmuch": 0,
        "inc": 0,
        "indeed": 0,
        "indicate": 0,
        "indicated": 0,
        "indicates": 0,
        "ink": 0,
        "inner": 0,
        "insofar": 0,
        "install": 0,
        "instead": 0,
        "into": 0,
        "inward": 0,
        "is": 0,
        "isn": 0,
        "it": 0,
        "its": 0,
        "itself": 0,
        "j": 0,
        "just": 0,
        "k": 0,
        "keep": 0,
        "keeps": 0,
        "kept": 0,
        "kitchen": 0,
        "knife": 0,
        "know": 0,
        "known": 0,
        "knows": 0,
        "l": 0,
        "lamp": 0,
        "laptop": 0,
        "last": 0,
        "lately": 0,
        "later": 0,
        "latter": 0,
        "latterly": 0,
        "least": 0,
        "less": 0,
        "lest": 0,
        "let": 0,
        "life": 0,
        "like": 0,
        "liked": 0,
        "likely": 0,
        "little": 0,
        "ll": 0,
        "look": 0,
        "looking": 0,
        "looks": 0,
        "ltd": 0,
        "m": 0,
        "mainly": 0,
        "many": 0,
        "may": 0,
        "maybe": 0,
        "me": 0,
        "mean": 0,
        "meanwhile": 0,
        "merely": 0,
        "might": 0,
        "mon": 0,
        "more": 0,
        "moreover": 0,
        "most": 0,
        "mostly": 0,
        "movie": 0,
        "mower": 0,
        "much": 0,
        "must": 0,
        "my": 0,
        "myself": 0,
        "n": 0,
        "name": 0,
        "namely": 0,
        "nd": 0,
        "near": 0,
        "nearly": 0,
        "necessary": 0,
        "need": 0,
        "needs": 0,
        "neither": 0,
        "never": 0,
        "nevertheless": 0,
        "new": 0,
        "next": 0,
        "nine": 0,
        "no": 0,
        "nobody": 0,
        "non": 0,
        "none": 0,
        "noone": 0,
        "nor": 0,
        "normally": 0,
        "not": 0,
        "nothing": 0,
        "novel": 0,
        "now": 0,
        "nowhere": 0,
        "o": 0,
        "obviously": 0,
        "of": 0,
        "off": 0,
        "often": 0,
        "oh": 0,
        "ok": 0,
        "okay": 0,
        "old": 0,
        "on": 0,
        "once": 0,
        "one": 0,
        "ones": 0,
        "only": 0,
        "onto": 0,
        "or": 0,
        "other": 0,
        "others": 0,
        "otherwise": 0,
        "ought": 0,
        "our": 0,
        "ours": 0,
        "ourselves": 0,
        "out": 0,
        "outside": 0,
        "over": 0,
        "overall": 0,
        "own": 0,
        "p": 0,
        "particular": 0,
        "particularly": 0,
        "per": 0,
        "perhaps": 0,
        "phone": 0,
        "placed": 0,
        "please": 0,
        "plus": 0,
        "possible": 0,
        "presumably": 0,
        "printer": 0,
        "probably": 0,
        "product": 0,
        "provides": 0,
        "q": 0,
        "que": 0,
        "quite": 0,
        "qv": 0,
        "r": 0,
        "rather": 0,
        "rd": 0,
        "re": 0,
        "read": 0,
        "really": 0,
        "reasonably": 0,
        "regarding": 0,
        "regardless": 0,
        "regards": 0,
        "relatively": 0,
        "respectively": 0,
        "right": 0,
        "s": 0,
        "said": 0,
        "same": 0,
        "saw": 0,
        "say": 0,
        "saying": 0,
        "says": 0,
        "second": 0,
        "secondly": 0,
        "see": 0,
        "seeing": 0,
        "seem": 0,
        "seemed": 0,
        "seeming": 0,
        "seems": 0,
        "seen": 0,
        "self": 0,
        "selves": 0,
        "sensible": 0,
        "sent": 0,
        "serious": 0,
        "seriously": 0,
        "seven": 0,
        "several": 0,
        "shall": 0,
        "shave": 0,
        "she": 0,
        "shoes": 0,
        "should": 0,
        "shouldn": 0,
        "since": 0,
        "six": 0,
        "skin": 0,
        "so": 0,
        "some": 0,
        "somebody": 0,
        "somehow": 0,
        "someone": 0,
        "something": 0,
        "sometime": 0,
        "sometimes": 0,
        "somewhat": 0,
        "somewhere": 0,
        "song": 0,
        "songs": 0,
        "soon": 0,
        "sorry": 0,
        "specified": 0,
        "specify": 0,
        "specifying": 0,
        "still": 0,
        "story": 0,
        "strings": 0,
        "stroller": 0,
        "sub": 0,
        "such": 0,
        "sup": 0,
        "sure": 0,
        "t": 0,
        "take": 0,
        "taken": 0,
        "taste": 0,
        "tell": 0,
        "tends": 0,
        "th": 0,
        "than": 0,
        "thank": 0,
        "thanks": 0,
        "thanx": 0,
        "that": 0,
        "thats": 0,
        "the": 0,
        "their": 0,
        "theirs": 0,
        "them": 0,
        "themselves": 0,
        "then": 0,
        "thence": 0,
        "there": 0,
        "thereafter": 0,
        "thereby": 0,
        "therefore": 0,
        "therein": 0,
        "theres": 0,
        "thereupon": 0,
        "these": 0,
        "they": 0,
        "think": 0,
        "third": 0,
        "this": 0,
        "thorough": 0,
        "thoroughly": 0,
        "those": 0,
        "though": 0,
        "three": 0,
        "through": 0,
        "throughout": 0,
        "thru": 0,
        "thus": 0,
        "to": 0,
        "together": 0,
        "too": 0,
        "took": 0,
        "toward": 0,
        "towards": 0,
        "toy": 0,
        "tried": 0,
        "tries": 0,
        "truck": 0,
        "truly": 0,
        "try": 0,
        "trying": 0,
        "twice": 0,
        "two": 0,
        "u": 0,
        "un": 0,
        "under": 0,
        "unfortunately": 0,
        "unless": 0,
        "unlikely": 0,
        "until": 0,
        "unto": 0,
        "up": 0,
        "upon": 0,
        "us": 0,
        "use": 0,
        "used": 0,
        "useful": 0,
        "uses": 0,
        "using": 0,
        "usually": 0,
        "v": 0,
        "value": 0,
        "various": 0,
        "ve": 0,
        "very": 0,
        "via": 0,
        "viz": 0,
        "vs": 0,
        "want": 0,
        "wants": 0,
        "was": 0,
        "wasn": 0,
        "way": 0,
        "we": 0,
        "wear": 0,
        "welcome": 0,
        "well": 0,
        "went": 0,
        "were": 0,
        "weren": 0,
        "what": 0,
        "whatever": 0,
        "when": 0,
        "whence": 0,
        "whenever": 0,
        "where": 0,
        "whereafter": 0,
        "whereas": 0,
        "whereby": 0,
        "wherein": 0,
        "whereupon": 0,
        "wherever": 0,
        "whether": 0,
        "which": 0,
        "while": 0,
        "whither": 0,
        "who": 0,
        "whoever": 0,
        "whole": 0,
        "whom": 0,
        "whose": 0,
        "why": 0,
        "will": 0,
        "willing": 0,
        "wish": 0,
        "with": 0,
        "within": 0,
        "without": 0,
        "won": 0,
        "wonder": 0,
        "would": 0,
        "wouldn": 0,
        "x": 0,
        "y": 0,
        "yes": 0,
        "yet": 0,
        "you": 0,
        "your": 0,
        "yours": 0,
        "yourself": 0,
        "yourselves": 0,
        "z": 0,
        "zero": 0,
    }
    
    categories_counts = {}

    categories_tokens = {
        'category_count': {}
    }

    def initFiles(self):
        with open(self.stopWordsPath, 'r') as file:
            for word in file.read().split("\n"):
                self.stopWordsHash[word] = 1

    def map_words_categories(self, _, line):
        for review in line.splitlines():
            review = json.loads(review)
            tokens = re.findall(r'\b[^\d\W]+\b|[()[]{}.!?,;:+=-_`~#@&*%€$§\/]^', review["reviewText"])
            # tokens = re.findall(r'\b\w+\b|[(){}\[\].!?,;:+=\-_"\'`~#@&*%€$§\\/]+', review['reviewText'])
            tokens = set(token.lower() for token in tokens if token not in self.stopWordsHash and len(token) > 2)
            for token in tokens:
                yield (review['category'], token), 1
            
            yield ('category_count', review['category']), 1

    def combiner_count_words(self, word, counts):
        yield word, sum(counts)

    def reducer_count_words(self, word, counts):
        totalCount = sum(counts)

        yield word, totalCount


    def logData(self, data):
        with open(self.logPath, 'a') as file:
            for item in data:
                file.write(str(item) + "\n")


    def calculateChi(self):
        # c is refered to the category, t is referred to the token(word)
        # In order to be able to calculate chi-square, we need to have the following values for each token:
        # N- total number of retrieved documents
        # A- number of documents in c which contain t - this value is found in self.categories_tokens[{c}][{t}]
        # B- number of documents not in c which contain t - we need go onto each category and check if they have the token, if yes, we accumulate its value into token's B
        # C- number of documents in c without t - this can be derived from getting the total number of documents for the category and subtracting A from it
        # D- number of documents not in c without t - N minus total documents in c minus calculated B of each category
        # the formula for calculating chi-squared is
        # N(AD - BC)^2 / (A+B)(A+C)(B+D)(C+D)
        N = 0

        for c in self.categories_tokens['category_count']:
            N += self.categories_tokens['category_count'][c]
            self.categories_counts[c] = self.categories_tokens['category_count'][c]

        # remove category_count
        self.categories_tokens.pop('category_count')

        for category in self.categories_tokens:
            self.categories_chi[category] = []
            for token in self.categories_tokens[category]:
                A = self.categories_tokens[category][token]
                B = 0

                for c in self.categories_tokens:
                    if c == category:
                        continue
                    if token in self.categories_tokens[c]:
                        B += self.categories_tokens[c][token]

                C: int = self.categories_counts[category] - A
                D: int = N - self.categories_counts[category] - B

                # R = N(AD - BC)^2 / (A+B)(A+C)(B+D)(C+D)
                R: float = (N * (((A * D) - (B * C)) ** 2)) / ((A + B) * (A + C) * (B + D) * (C + D))
                self.categories_chi[category].append({"token": token, "chi": R})


    def sortTokens(self):
        for category in self.categories_chi:
            self.categories_chi[category].sort(key=lambda x: x['chi'], reverse=True)
            if len(self.categories_chi[category]) > 76:
                self.categories_chi[category] = self.categories_chi[category][0:75]


    def calculate(self):
        self.calculateChi()
        self.sortTokens()

        for category in self.categories_chi:
            append = ''
            for token in self.categories_chi[category]:
                append += ' ' + token['token'] + ':' + str(token['chi'])
            yield category, append


    def second_mapper(self, word, count):
        yield None, (word[0], word[1], count)


    def second_reducer(self, word, word_counts):
        for cat, tok, count in word_counts:
            if cat in self.categories_tokens:
                self.categories_tokens[cat][tok] = count
            else: 
                self.categories_tokens[cat] = {tok: count}

        for category, token in self.calculate():
            yield category, token

    def steps(self):
        return [
            MRStep(
                # mapper_init=self.initFiles,
                mapper=self.map_words_categories,
                combiner=self.combiner_count_words,
                reducer=self.reducer_count_words,
            ),
            MRStep(
                mapper=self.second_mapper,
                reducer=self.second_reducer
            )
        ]


if __name__ == '__main__':
    job = MyJob()
    job.run()
    # job.calculate(job.categories_tokens)

    # with job.make_runner() as runner:
    #     runner.run()
    #     global_output = job.categories_tokens
    #     job.calculate(global_output)